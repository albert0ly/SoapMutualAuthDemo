<?xml version="1.0"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.7.1" />
    <httpRuntime targetFramework="4.7.1"/>
  </system.web>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="MutualCertificateBinding">
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service name="WcfService1.Service1">
        <!-- Use a relative address for the endpoint -->
        <endpoint address=""
                  binding="wsHttpBinding"
                  bindingConfiguration="MutualCertificateBinding"
                  contract="WcfService1.IService1" />
        <endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange" />


        <host>
          <baseAddresses>
            <add baseAddress="https://com-ws336.comtec.co.il/WcfService1/Service1.svc" />
          </baseAddresses>
        </host>
        

      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- Enable metadata over HTTPS -->
          <serviceMetadata httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceCredentials>
            <clientCertificate>
              <!-- For development, you can set certificateValidationMode to None.
                   For production, use ChainTrust or PeerOrChainTrust and configure trusted issuers. -->
              <authentication certificateValidationMode="None" revocationMode="NoCheck" />
            </clientCertificate>
            <serviceCertificate
              findValue="YourServiceCert"
              storeLocation="LocalMachine"
              storeName="My"
              x509FindType="FindBySubjectName" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel"
              switchValue="Verbose, ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add name="serverTraceListener" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="serverTraceListener"
           type="System.Diagnostics.XmlWriterTraceListener"
           initializeData="f:\temp\server-trace.svclog" />
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>


  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <directoryBrowse enabled="true"/>
  </system.webServer>
</configuration>